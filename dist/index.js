(()=>{var n={365:(n,e,t)=>{"use strict";t.d(e,{A:()=>c});var r=t(354),o=t.n(r),a=t(314),i=t.n(a)()(o());i.push([n.id,"html, body {\n  /*box-sizing: content-box;*/\n  margin: 0;\n  height: 100%;\n  background-color: #FEF9F5;\n  color: #1A0E03;\n}\n\n#container {\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n}\n\n#task_window {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n}\n\n#project_name {\n  margin: 10px;\n  justify-self: flex-start;\n  background-color: rgba(0, 0, 0, 10%);\n  border: none;\n  padding: 5px;\n  border-radius: 5px;\n}\n\n#tasks { \n  width: 100%;\n  height: 85vh;\n  overflow: scroll;\n}\n\n#new_task {\n  justify-self: flex-end;\n  background-color: #E47B31;\n  border: none;\n  font-size: 15px;\n  padding: 5px;\n  margin: 10px;\n  border-radius: 5px;\n}\n\n#new_task:hover {\n  background-color: #cf702c;\n}\n\n.task {\n  border-radius: 5px;\n  padding: 5px;\n  margin: 8px;\n  background-color: #56E9A3;\n  display: flex;\n  justify-content: space-between;\n}\n\n.task input {\n  display: block;\n  border: none;\n  border-radius: 5px;\n  background-color: rgba(0, 0, 0, 10%);\n  margin: 5px;\n  padding: 5px;\n}\n\n.task textarea {\n  resize: none;\n  border: none;\n  border-radius: 5px;\n  background-color: rgba(0, 0, 0, 10%);\n  margin: 5px;\n  padding: 5px;\n}\n\n.task .delete {\n  height: 20px;\n  width: 20px;\n  padding: 0;\n  margin: 0;\n  border: none;\n  border-radius: 100%;\n  background-color: #E47B31;\n}\n\n.task .delete:hover {\n  background-color: #cf702c;\n}\n\n#task_window {\n  grid-column: 1;\n}\n\n#project_window {\n  grid-column: 2;\n  background-color: #7EEE7C;\n}\n\n#projects button{\n  display: block;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,2BAA2B;EAC3B,SAAS;EACT,YAAY;EACZ,yBAAyB;EACzB,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,WAAW;EACX,YAAY;EACZ,SAAS;AACX;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,8BAA8B;AAChC;;AAEA;EACE,YAAY;EACZ,wBAAwB;EACxB,oCAAoC;EACpC,YAAY;EACZ,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,sBAAsB;EACtB,yBAAyB;EACzB,YAAY;EACZ,eAAe;EACf,YAAY;EACZ,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,WAAW;EACX,yBAAyB;EACzB,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,cAAc;EACd,YAAY;EACZ,kBAAkB;EAClB,oCAAoC;EACpC,WAAW;EACX,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,kBAAkB;EAClB,oCAAoC;EACpC,WAAW;EACX,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,UAAU;EACV,SAAS;EACT,YAAY;EACZ,mBAAmB;EACnB,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,cAAc;EACd,yBAAyB;AAC3B;;AAEA;EACE,cAAc;AAChB",sourcesContent:["html, body {\n  /*box-sizing: content-box;*/\n  margin: 0;\n  height: 100%;\n  background-color: #FEF9F5;\n  color: #1A0E03;\n}\n\n#container {\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n}\n\n#task_window {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n}\n\n#project_name {\n  margin: 10px;\n  justify-self: flex-start;\n  background-color: rgba(0, 0, 0, 10%);\n  border: none;\n  padding: 5px;\n  border-radius: 5px;\n}\n\n#tasks { \n  width: 100%;\n  height: 85vh;\n  overflow: scroll;\n}\n\n#new_task {\n  justify-self: flex-end;\n  background-color: #E47B31;\n  border: none;\n  font-size: 15px;\n  padding: 5px;\n  margin: 10px;\n  border-radius: 5px;\n}\n\n#new_task:hover {\n  background-color: #cf702c;\n}\n\n.task {\n  border-radius: 5px;\n  padding: 5px;\n  margin: 8px;\n  background-color: #56E9A3;\n  display: flex;\n  justify-content: space-between;\n}\n\n.task input {\n  display: block;\n  border: none;\n  border-radius: 5px;\n  background-color: rgba(0, 0, 0, 10%);\n  margin: 5px;\n  padding: 5px;\n}\n\n.task textarea {\n  resize: none;\n  border: none;\n  border-radius: 5px;\n  background-color: rgba(0, 0, 0, 10%);\n  margin: 5px;\n  padding: 5px;\n}\n\n.task .delete {\n  height: 20px;\n  width: 20px;\n  padding: 0;\n  margin: 0;\n  border: none;\n  border-radius: 100%;\n  background-color: #E47B31;\n}\n\n.task .delete:hover {\n  background-color: #cf702c;\n}\n\n#task_window {\n  grid-column: 1;\n}\n\n#project_window {\n  grid-column: 2;\n  background-color: #7EEE7C;\n}\n\n#projects button{\n  display: block;\n}"],sourceRoot:""}]);const c=i},314:n=>{"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var A=[].concat(n[d]);r&&i[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),e.push(A))}},e}},354:n=>{"use strict";n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:n=>{"use strict";var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],c=0;c<n.length;c++){var s=n[c],d=r.base?s[0]+r.base:s[0],A=a[d]||0,l="".concat(d," ").concat(A);a[d]=A+1;var u=t(l),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var g=o(p,r);r.byIndex=c,e.splice(c,0,{identifier:l,updater:g,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var s=r(n,o),d=0;d<a.length;d++){var A=t(a[d]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}a=s}}},659:n=>{"use strict";var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:n=>{"use strict";n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{"use strict";n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{"use strict";n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{"use strict";n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},338:n=>{function e(n){return{title:`Untitled ${n}`,tasks:[]}}function t(){let n=new Date,e=`${n.getFullYear()}`,t=`${n.getMonth()}`,r=`${n.getDate()}`;return 1==t.length&&(t=`0${t}`),1==r.length&&(r=`0${r}`),`${e}-${t}-${r}`}let r=[],o=0;r.push(e(r.length)),n.exports={getId:function(n){return parseInt(n.target.classList[0])},deleteTask:function(n){r[o].tasks.splice(n,1)},changeProject:function(n){o=n},newTask:function(){r[o].tasks.push({title:"",description:"",dueDate:t(),priority:1})},newProject:function(){r.push(e(r.length)),o=r.length-1},deleteProject:function(){r.splice(o,1),o--},getTasks:function(){return r[o].tasks},getProjectTitle:function(){return r[o].title},updateTask:function(n,e){r[o].task[e]=n},updateProjectTitle:function(n){r[o].title=n},getProjects:function(){return r}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{"use strict";var n=t(72),e=t.n(n),r=t(825),o=t.n(r),a=t(659),i=t.n(a),c=t(56),s=t.n(c),d=t(540),A=t.n(d),l=t(113),u=t.n(l),p=t(365),g={};g.styleTagTransform=u(),g.setAttributes=s(),g.insert=i().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=A(),e()(p.A,g),p.A&&p.A.locals&&p.A.locals;var E=t(338);const f=document.querySelector("#tasks"),C=document.querySelector("#project_name"),m=document.querySelector("#new_task"),b=document.querySelector("#projects");function h(){C.value=(0,E.getProjectTitle)(),function(){f.innerHTML="";let n=(0,E.getTasks)();for(let e=0;e<n.length;e++){let t=n[e];const r=document.createElement("div");r.classList.add(`${e}`),r.classList.add("task");const o=document.createElement("div");o.classList.add("inputs");const a=document.createElement("input");a.value=t.title,a.type="text",a.classList.add(`${e}`),a.classList.add("title"),a.placeholder="Title",a.addEventListener("input",(n=>{let e=(0,E.getId)(n);(0,E.getTasks)()[e].title=n.target.value,(0,E.updateTask)(t,e)}));const i=document.createElement("textarea");i.value=t.description,i.classList.add(`${e}`),i.placeholder="description",i.addEventListener("input",(n=>{let e=(0,E.getId)(n);(0,E.getTasks)()[e].description=n.target.value,(0,E.updateTask)(t,e)}));const c=document.createElement("input");c.value=t.dueDate,c.classList.add(`${e}`),c.type="date",c.addEventListener("input",(n=>{let e=(0,E.getId)(n);(0,E.getTasks)()[e].dueDate=n.target.value,(0,E.updateTask)(t,e)}));const s=document.createElement("input");s.value=t.priority,s.classList.add(`${e}`),s.type="number",s.addEventListener("input",(n=>{let e=(0,E.getId)(n);(0,E.getTasks)()[e].dueDate=n.target.value,(0,E.updateTask)(t,e)}));const d=document.createElement("button");d.innerHTML="X",d.classList.add(`${e}`),d.classList.add("delete"),d.addEventListener("click",(n=>{let e=(0,E.getId)(n);(0,E.deleteTask)(e),h()})),o.appendChild(a),o.appendChild(c),o.appendChild(s),o.appendChild(i),r.appendChild(o),r.appendChild(d),f.appendChild(r)}}(),function(){b.innerHTML="";let n=(0,E.getProjects)();for(let e=0;e<n.length;e++){let t=document.createElement("button");t.innerHTML=n[e].title,t.classList.add(`${e}`),t.addEventListener("click",(n=>{(0,E.changeProject)((0,E.getId)(n)),h()})),b.appendChild(t)}}()}document.querySelector("#new_project").addEventListener("click",(()=>{(0,E.newProject)(),h()})),C.addEventListener("input",(()=>{(0,E.updateProjectTitle)(C.value),h(),h()})),m.addEventListener("click",(()=>{(0,E.newTask)(),h()})),h()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,