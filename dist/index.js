(()=>{var n={365:(n,e,t)=>{"use strict";t.d(e,{A:()=>i});var r=t(354),o=t.n(r),a=t(314),c=t.n(a)()(o());c.push([n.id,"html, body {\n  /*box-sizing: content-box;*/\n  margin: 0;\n  height: 100%;\n  background-color: #FEF9F5;\n  color: #1A0E03;\n}\n\n#container {\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n}\n\n#task_window {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n}\n\n#project_name {\n  margin: 10px;\n  justify-self: flex-start;\n  background-color: rgba(0, 0, 0, 10%);\n  border: none;\n  padding: 5px;\n  border-radius: 5px;\n}\n\n#tasks { \n  width: 100%;\n  height: 85vh;\n  overflow: scroll;\n}\n\n.primary_button {\n  background-color: #E47B31;\n  border: none;\n  font-size: 15px;\n  padding: 5px;\n  margin: 10px;\n  border-radius: 5px;\n}\n\n.primary_button:hover {\n  background-color: #cf702c;\n}\n\n.primary_button:active {\n  background-color: #be6627;\n}\n\n.task {\n  border-radius: 5px;\n  padding: 5px;\n  margin: 8px;\n  background-color: #56E9A3;\n  display: flex;\n  justify-content: space-between;\n}\n\n.task input {\n  display: block;\n  border: none;\n  border-radius: 5px;\n  background-color: rgba(0, 0, 0, 10%);\n  margin: 5px;\n  padding: 5px;\n}\n\n.task textarea {\n  resize: none;\n  border: none;\n  border-radius: 5px;\n  background-color: rgba(0, 0, 0, 10%);\n  margin: 5px;\n  padding: 5px;\n}\n\n.task .delete {\n  height: 20px;\n  width: 20px;\n  padding: 0;\n  margin: 0;\n  border: none;\n  border-radius: 100%;\n  background-color: transparent;\n}\n\n.task .delete:hover {\n  background-color: rgba(0, 0, 0, 10%);\n}\n\n.task .delete:active {\n  background-color: rgba(0, 0, 0, 15%);\n}\n\n#task_window {\n  grid-column: 1;\n}\n\n#project_window {\n  grid-column: 2;\n  background-color: #7EEE7C;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n#projects {\n  display: flex;\n  flex-direction: column;\n  height: 90vh;\n  overflow: scroll;\n}\n\n.project {\n  margin: 10px;\n  margin-bottom: 0;\n  padding: 8px;\n  background-color: rgba(0, 0, 0, 10%);\n  border: none;\n  font-size: 15px;\n  text-align: start;\n}\n\n.project:hover {\n  background-color: rgba(0, 0, 0, 15%);\n}\n\n.project:active {\n  background-color: rgba(0, 0, 0, 20%);\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,2BAA2B;EAC3B,SAAS;EACT,YAAY;EACZ,yBAAyB;EACzB,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,WAAW;EACX,YAAY;EACZ,SAAS;AACX;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,8BAA8B;AAChC;;AAEA;EACE,YAAY;EACZ,wBAAwB;EACxB,oCAAoC;EACpC,YAAY;EACZ,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,yBAAyB;EACzB,YAAY;EACZ,eAAe;EACf,YAAY;EACZ,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,WAAW;EACX,yBAAyB;EACzB,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,cAAc;EACd,YAAY;EACZ,kBAAkB;EAClB,oCAAoC;EACpC,WAAW;EACX,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,kBAAkB;EAClB,oCAAoC;EACpC,WAAW;EACX,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,UAAU;EACV,SAAS;EACT,YAAY;EACZ,mBAAmB;EACnB,6BAA6B;AAC/B;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,cAAc;EACd,yBAAyB;EACzB,aAAa;EACb,sBAAsB;EACtB,8BAA8B;AAChC;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,gBAAgB;EAChB,YAAY;EACZ,oCAAoC;EACpC,YAAY;EACZ,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,oCAAoC;AACtC",sourcesContent:["html, body {\n  /*box-sizing: content-box;*/\n  margin: 0;\n  height: 100%;\n  background-color: #FEF9F5;\n  color: #1A0E03;\n}\n\n#container {\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n}\n\n#task_window {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n}\n\n#project_name {\n  margin: 10px;\n  justify-self: flex-start;\n  background-color: rgba(0, 0, 0, 10%);\n  border: none;\n  padding: 5px;\n  border-radius: 5px;\n}\n\n#tasks { \n  width: 100%;\n  height: 85vh;\n  overflow: scroll;\n}\n\n.primary_button {\n  background-color: #E47B31;\n  border: none;\n  font-size: 15px;\n  padding: 5px;\n  margin: 10px;\n  border-radius: 5px;\n}\n\n.primary_button:hover {\n  background-color: #cf702c;\n}\n\n.primary_button:active {\n  background-color: #be6627;\n}\n\n.task {\n  border-radius: 5px;\n  padding: 5px;\n  margin: 8px;\n  background-color: #56E9A3;\n  display: flex;\n  justify-content: space-between;\n}\n\n.task input {\n  display: block;\n  border: none;\n  border-radius: 5px;\n  background-color: rgba(0, 0, 0, 10%);\n  margin: 5px;\n  padding: 5px;\n}\n\n.task textarea {\n  resize: none;\n  border: none;\n  border-radius: 5px;\n  background-color: rgba(0, 0, 0, 10%);\n  margin: 5px;\n  padding: 5px;\n}\n\n.task .delete {\n  height: 20px;\n  width: 20px;\n  padding: 0;\n  margin: 0;\n  border: none;\n  border-radius: 100%;\n  background-color: transparent;\n}\n\n.task .delete:hover {\n  background-color: rgba(0, 0, 0, 10%);\n}\n\n.task .delete:active {\n  background-color: rgba(0, 0, 0, 15%);\n}\n\n#task_window {\n  grid-column: 1;\n}\n\n#project_window {\n  grid-column: 2;\n  background-color: #7EEE7C;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n#projects {\n  display: flex;\n  flex-direction: column;\n  height: 90vh;\n  overflow: scroll;\n}\n\n.project {\n  margin: 10px;\n  margin-bottom: 0;\n  padding: 8px;\n  background-color: rgba(0, 0, 0, 10%);\n  border: none;\n  font-size: 15px;\n  text-align: start;\n}\n\n.project:hover {\n  background-color: rgba(0, 0, 0, 15%);\n}\n\n.project:active {\n  background-color: rgba(0, 0, 0, 20%);\n}"],sourceRoot:""}]);const i=c},314:n=>{"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var c={};if(r)for(var i=0;i<this.length;i++){var A=this[i][0];null!=A&&(c[A]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);r&&c[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},354:n=>{"use strict";n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:n=>{"use strict";var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},c=[],i=0;i<n.length;i++){var A=n[i],s=r.base?A[0]+r.base:A[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var u=t(l),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var g=o(p,r);r.byIndex=i,e.splice(i,0,{identifier:l,updater:g,references:1})}c.push(l)}return c}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var c=0;c<a.length;c++){var i=t(a[c]);e[i].references--}for(var A=r(n,o),s=0;s<a.length;s++){var d=t(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=A}}},659:n=>{"use strict";var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:n=>{"use strict";n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{"use strict";n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{"use strict";n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{"use strict";n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},338:n=>{function e(n){let e;try{e=window[n];const t="__storage_test__";return e.setItem(t,t),e.removeItem(t),!0}catch(n){return n instanceof DOMException&&"QuotaExceededError"===n.name&&e&&0!==e.length}}function t(n){return{title:`Untitled ${n}`,tasks:[]}}function r(){let n=new Date,e=`${n.getFullYear()}`,t=`${n.getMonth()}`,r=`${n.getDate()}`;return 1==t.length&&(t=`0${t}`),1==r.length&&(r=`0${r}`),`${e}-${t}-${r}`}let o=[],a=0;function c(){e("localStorage")&&(localStorage.saved=JSON.stringify(o))}e("localStorage")&&void 0!==localStorage.saved?o=JSON.parse(localStorage.saved):o.push(t(o.length)),n.exports={getId:function(n){return parseInt(n.target.classList[0])},deleteTask:function(n){o[a].tasks.splice(n,1),c()},changeProject:function(n){a=n},newTask:function(){o[a].tasks.push({title:"",description:"",dueDate:r(),priority:1}),c()},newProject:function(){o.push(t(o.length)),a=o.length-1,c()},deleteProject:function(){o.splice(a,1),a=Math.max(0,a-1),c()},getTasks:function(){return o[a].tasks},getProjectTitle:function(){return o[a].title},updateTask:function(n,e){o[a].task[e]=n,c()},updateProjectTitle:function(n){o[a].title=n,c()},getProjects:function(){return o}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{"use strict";var n=t(72),e=t.n(n),r=t(825),o=t.n(r),a=t(659),c=t.n(a),i=t(56),A=t.n(i),s=t(540),d=t.n(s),l=t(113),u=t.n(l),p=t(365),g={};g.styleTagTransform=u(),g.setAttributes=A(),g.insert=c().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=d(),e()(p.A,g),p.A&&p.A.locals&&p.A.locals;var E=t(338);const C=document.querySelector("#tasks"),f=document.querySelector("#project_name"),b=document.querySelector("#new_task"),m=document.querySelector("#projects"),h=document.querySelector("#new_project"),v=document.querySelector("#delete_project");function k(){f.value=(0,E.getProjectTitle)(),function(){C.innerHTML="";let n=(0,E.getTasks)();for(let e=0;e<n.length;e++){let t=n[e];const r=document.createElement("div");r.classList.add(`${e}`),r.classList.add("task");const o=document.createElement("div");o.classList.add("inputs");const a=document.createElement("input");a.value=t.title,a.type="text",a.classList.add(`${e}`),a.classList.add("title"),a.placeholder="Title",a.addEventListener("input",(n=>{let e=(0,E.getId)(n);(0,E.getTasks)()[e].title=n.target.value,(0,E.updateTask)(t,e)}));const c=document.createElement("textarea");c.value=t.description,c.classList.add(`${e}`),c.placeholder="description",c.addEventListener("input",(n=>{let e=(0,E.getId)(n);(0,E.getTasks)()[e].description=n.target.value,(0,E.updateTask)(t,e)}));const i=document.createElement("input");i.value=t.dueDate,i.classList.add(`${e}`),i.type="date",i.addEventListener("input",(n=>{let e=(0,E.getId)(n);(0,E.getTasks)()[e].dueDate=n.target.value,(0,E.updateTask)(t,e)}));const A=document.createElement("input");A.value=t.priority,A.classList.add(`${e}`),A.type="number",A.placeholder="Priority",A.addEventListener("input",(n=>{let e=(0,E.getId)(n);(0,E.getTasks)()[e].dueDate=n.target.value,(0,E.updateTask)(t,e)}));const s=document.createElement("button");s.innerHTML="X",s.classList.add(`${e}`),s.classList.add("delete"),s.addEventListener("click",(n=>{let e=(0,E.getId)(n);(0,E.deleteTask)(e),k()})),o.appendChild(a),o.appendChild(i),o.appendChild(A),o.appendChild(c),r.appendChild(o),r.appendChild(s),C.appendChild(r)}}(),function(){m.innerHTML="";let n=(0,E.getProjects)();for(let e=0;e<n.length;e++){let t=document.createElement("button");t.innerHTML=n[e].title,t.classList.add(`${e}`),t.classList.add("project"),t.addEventListener("click",(n=>{(0,E.changeProject)((0,E.getId)(n)),k()})),m.appendChild(t)}1===(0,E.getProjects)().length?v.hidden=!0:v.hidden=!1}()}h.addEventListener("click",(()=>{(0,E.newProject)(),k()})),f.addEventListener("input",(()=>{(0,E.updateProjectTitle)(f.value),k(),k()})),b.addEventListener("click",(()=>{(0,E.newTask)(),k()})),v.addEventListener("click",(()=>{(0,E.deleteProject)(),k()})),k()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,