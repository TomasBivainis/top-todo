(()=>{var e={365:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(354),a=n.n(r),o=n(314),s=n.n(o)()(a());s.push([e.id,"html, body {\n  box-sizing: content-box;\n  margin: 0;\n  height: 100%;\n}\n\n#container {\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n}\n\n#tasks input {\n  display: block;\n}\n\n#tasks .task {\n  border: 2px solid black; \n  padding: 5px;\n  margin: 5px;\n}\n\n#tasks textarea {\n  resize: none;\n}\n\n#task_window {\n  grid-column: 1;\n  background-color: blue;\n}\n\n#project_window {\n  grid-column: 2;\n  background-color: red;\n}\n\n#projects button{\n  display: block;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,uBAAuB;EACvB,SAAS;EACT,YAAY;AACd;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,WAAW;EACX,YAAY;EACZ,SAAS;AACX;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,uBAAuB;EACvB,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,cAAc;EACd,sBAAsB;AACxB;;AAEA;EACE,cAAc;EACd,qBAAqB;AACvB;;AAEA;EACE,cAAc;AAChB",sourcesContent:["html, body {\n  box-sizing: content-box;\n  margin: 0;\n  height: 100%;\n}\n\n#container {\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n}\n\n#tasks input {\n  display: block;\n}\n\n#tasks .task {\n  border: 2px solid black; \n  padding: 5px;\n  margin: 5px;\n}\n\n#tasks textarea {\n  resize: none;\n}\n\n#task_window {\n  grid-column: 1;\n  background-color: blue;\n}\n\n#project_window {\n  grid-column: 2;\n  background-color: red;\n}\n\n#projects button{\n  display: block;\n}"],sourceRoot:""}]);const i=s},314:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(r)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(s[c]=!0)}for(var u=0;u<e.length;u++){var d=[].concat(e[u]);r&&s[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),t.push(d))}},t}},354:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[t].concat([o]).join("\n")}return[t].join("\n")}},72:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var o={},s=[],i=0;i<e.length;i++){var c=e[i],u=r.base?c[0]+r.base:c[0],d=o[u]||0,l="".concat(u," ").concat(d);o[u]=d+1;var p=n(l),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(A);else{var f=a(A,r);r.byIndex=i,t.splice(i,0,{identifier:l,updater:f,references:1})}s.push(l)}return s}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var s=0;s<o.length;s++){var i=n(o[s]);t[i].references--}for(var c=r(e,a),u=0;u<o.length;u++){var d=n(o[u]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}o=c}}},659:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},540:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},338:e=>{function t(){let e=new Date,t=`${e.getFullYear()}`,n=`${e.getMonth()}`,r=`${e.getDate()}`;return 1==n.length&&(n=`0${n}`),1==r.length&&(r=`0${r}`),`${t}-${n}-${r}`}e.exports={createTask:function(e){return{title:`Untitled ${e}`,description:"",dueDate:t(),priority:1}},createProject:function(e){return{title:`Untitled ${e}`,tasks:[]}}}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={id:r,exports:{}};return e[r](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{"use strict";var e=n(72),t=n.n(e),r=n(825),a=n.n(r),o=n(659),s=n.n(o),i=n(56),c=n.n(i),u=n(540),d=n.n(u),l=n(113),p=n.n(l),A=n(365),f={};f.styleTagTransform=p(),f.setAttributes=c(),f.insert=s().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=d(),t()(A.A,f),A.A&&A.A.locals&&A.A.locals;var v=n(338);const m=document.querySelector("#tasks"),h=document.querySelector("#project_name"),g=document.querySelector("#new_task"),E=document.querySelector("#projects"),y=document.querySelector("#new_project");let b=[];b.push((0,v.createProject)(b.length));let C=0;function k(e){return parseInt(e.target.classList[0])}function x(){m.innerHTML="";for(let e=0;e<b[C].tasks.length;e++){let t=b[C].tasks[e];const n=document.createElement("div");n.classList.add(`${e}`),n.classList.add("task");const r=document.createElement("input");r.value=t.title,r.type="text",r.classList.add(`${e}`),r.classList.add("title"),r.addEventListener("input",(e=>{let t=k(e);b[C].tasks[t].title=e.target.value}));const a=document.createElement("textarea");a.value=t.description,a.classList.add(`${e}`),a.addEventListener("input",(e=>{let t=k(e);b[C].tasks[t].description=e.target.value}));const o=document.createElement("input");o.value=t.dueDate,o.classList.add(`${e}`),o.type="date",o.addEventListener("input",(e=>{let t=k(e);b[C].tasks[t].dueDate=e.target.value}));const s=document.createElement("input");s.value=t.priority,s.classList.add(`${e}`),s.type="number",s.addEventListener("input",(e=>{let t=k(e);b[C].tasks[t].priority=parseInt(e.target.value)}));const i=document.createElement("button");i.innerHTML="Delete",i.classList.add(`${e}`),i.classList.add("delete"),i.addEventListener("click",(e=>{var t;t=k(e),b[C].tasks.splice(t,1),x()})),n.appendChild(r),n.appendChild(o),n.appendChild(s),n.appendChild(a),n.appendChild(i),m.appendChild(n)}}function L(){h.value=b[C].title,x(),w()}function w(){E.innerHTML="";for(let e=0;e<b.length;e++){let t=document.createElement("button");t.innerHTML=b[e].title,t.classList.add(`${e}`),t.addEventListener("click",(e=>{var t;t=k(e),C=t,L()})),E.appendChild(t)}}y.addEventListener("click",(function(){b.push((0,v.createProject)(b.length)),C=b.length-1,w(),L()})),h.addEventListener("input",(function(){b[C].title=h.value,E.childNodes[C].innerHTML=h.value})),g.addEventListener("click",(function(){b[C].tasks.push((0,v.createTask)(b[C].tasks.length)),x()})),L()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,